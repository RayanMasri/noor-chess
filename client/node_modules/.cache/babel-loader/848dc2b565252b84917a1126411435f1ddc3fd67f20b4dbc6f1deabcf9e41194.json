{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Server = exports.BaseServer = void 0;\nconst qs = require(\"querystring\");\nconst url_1 = require(\"url\");\nconst base64id = require(\"base64id\");\nconst transports_1 = require(\"./transports\");\nconst events_1 = require(\"events\");\nconst socket_1 = require(\"./socket\");\nconst debug_1 = require(\"debug\");\nconst cookie_1 = require(\"cookie\");\nconst ws_1 = require(\"ws\");\nconst debug = (0, debug_1.default)(\"engine\");\nconst kResponseHeaders = Symbol(\"responseHeaders\");\nclass BaseServer extends events_1.EventEmitter {\n  /**\n   * Server constructor.\n   *\n   * @param {Object} opts - options\n   * @api public\n   */\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.middlewares = [];\n    this.clients = {};\n    this.clientsCount = 0;\n    this.opts = Object.assign({\n      wsEngine: ws_1.Server,\n      pingTimeout: 20000,\n      pingInterval: 25000,\n      upgradeTimeout: 10000,\n      maxHttpBufferSize: 1e6,\n      transports: Object.keys(transports_1.default),\n      allowUpgrades: true,\n      httpCompression: {\n        threshold: 1024\n      },\n      cors: false,\n      allowEIO3: false\n    }, opts);\n    if (opts.cookie) {\n      this.opts.cookie = Object.assign({\n        name: \"io\",\n        path: \"/\",\n        // @ts-ignore\n        httpOnly: opts.cookie.path !== false,\n        sameSite: \"lax\"\n      }, opts.cookie);\n    }\n    if (this.opts.cors) {\n      this.use(require(\"cors\")(this.opts.cors));\n    }\n    if (opts.perMessageDeflate) {\n      this.opts.perMessageDeflate = Object.assign({\n        threshold: 1024\n      }, opts.perMessageDeflate);\n    }\n    this.init();\n  }\n  /**\n   * Compute the pathname of the requests that are handled by the server\n   * @param options\n   * @protected\n   */\n  _computePath(options) {\n    let path = (options.path || \"/engine.io\").replace(/\\/$/, \"\");\n    if (options.addTrailingSlash !== false) {\n      // normalize path\n      path += \"/\";\n    }\n    return path;\n  }\n  /**\n   * Returns a list of available transports for upgrade given a certain transport.\n   *\n   * @return {Array}\n   * @api public\n   */\n  upgrades(transport) {\n    if (!this.opts.allowUpgrades) return [];\n    return transports_1.default[transport].upgradesTo || [];\n  }\n  /**\n   * Verifies a request.\n   *\n   * @param {http.IncomingMessage}\n   * @return {Boolean} whether the request is valid\n   * @api private\n   */\n  verify(req, upgrade, fn) {\n    // transport check\n    const transport = req._query.transport;\n    if (!~this.opts.transports.indexOf(transport)) {\n      debug('unknown transport \"%s\"', transport);\n      return fn(Server.errors.UNKNOWN_TRANSPORT, {\n        transport\n      });\n    }\n    // 'Origin' header check\n    const isOriginInvalid = checkInvalidHeaderChar(req.headers.origin);\n    if (isOriginInvalid) {\n      const origin = req.headers.origin;\n      req.headers.origin = null;\n      debug(\"origin header invalid\");\n      return fn(Server.errors.BAD_REQUEST, {\n        name: \"INVALID_ORIGIN\",\n        origin\n      });\n    }\n    // sid check\n    const sid = req._query.sid;\n    if (sid) {\n      if (!this.clients.hasOwnProperty(sid)) {\n        debug('unknown sid \"%s\"', sid);\n        return fn(Server.errors.UNKNOWN_SID, {\n          sid\n        });\n      }\n      const previousTransport = this.clients[sid].transport.name;\n      if (!upgrade && previousTransport !== transport) {\n        debug(\"bad request: unexpected transport without upgrade\");\n        return fn(Server.errors.BAD_REQUEST, {\n          name: \"TRANSPORT_MISMATCH\",\n          transport,\n          previousTransport\n        });\n      }\n    } else {\n      // handshake is GET only\n      if (\"GET\" !== req.method) {\n        return fn(Server.errors.BAD_HANDSHAKE_METHOD, {\n          method: req.method\n        });\n      }\n      if (transport === \"websocket\" && !upgrade) {\n        debug(\"invalid transport upgrade\");\n        return fn(Server.errors.BAD_REQUEST, {\n          name: \"TRANSPORT_HANDSHAKE_ERROR\"\n        });\n      }\n      if (!this.opts.allowRequest) return fn();\n      return this.opts.allowRequest(req, (message, success) => {\n        if (!success) {\n          return fn(Server.errors.FORBIDDEN, {\n            message\n          });\n        }\n        fn();\n      });\n    }\n    fn();\n  }\n  /**\n   * Adds a new middleware.\n   *\n   * @example\n   * import helmet from \"helmet\";\n   *\n   * engine.use(helmet());\n   *\n   * @param fn\n   */\n  use(fn) {\n    this.middlewares.push(fn);\n  }\n  /**\n   * Apply the middlewares to the request.\n   *\n   * @param req\n   * @param res\n   * @param callback\n   * @protected\n   */\n  _applyMiddlewares(req, res, callback) {\n    if (this.middlewares.length === 0) {\n      debug(\"no middleware to apply, skipping\");\n      return callback();\n    }\n    const apply = i => {\n      debug(\"applying middleware nÂ°%d\", i + 1);\n      this.middlewares[i](req, res, err => {\n        if (err) {\n          return callback(err);\n        }\n        if (i + 1 < this.middlewares.length) {\n          apply(i + 1);\n        } else {\n          callback();\n        }\n      });\n    };\n    apply(0);\n  }\n  /**\n   * Closes all clients.\n   *\n   * @api public\n   */\n  close() {\n    debug(\"closing all open clients\");\n    for (let i in this.clients) {\n      if (this.clients.hasOwnProperty(i)) {\n        this.clients[i].close(true);\n      }\n    }\n    this.cleanup();\n    return this;\n  }\n  /**\n   * generate a socket id.\n   * Overwrite this method to generate your custom socket id\n   *\n   * @param {Object} request object\n   * @api public\n   */\n  generateId(req) {\n    return base64id.generateId();\n  }\n  /**\n   * Handshakes a new client.\n   *\n   * @param {String} transport name\n   * @param {Object} request object\n   * @param {Function} closeConnection\n   *\n   * @api protected\n   */\n  async handshake(transportName, req, closeConnection) {\n    const protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n    if (protocol === 3 && !this.opts.allowEIO3) {\n      debug(\"unsupported protocol version\");\n      this.emit(\"connection_error\", {\n        req,\n        code: Server.errors.UNSUPPORTED_PROTOCOL_VERSION,\n        message: Server.errorMessages[Server.errors.UNSUPPORTED_PROTOCOL_VERSION],\n        context: {\n          protocol\n        }\n      });\n      closeConnection(Server.errors.UNSUPPORTED_PROTOCOL_VERSION);\n      return;\n    }\n    let id;\n    try {\n      id = await this.generateId(req);\n    } catch (e) {\n      debug(\"error while generating an id\");\n      this.emit(\"connection_error\", {\n        req,\n        code: Server.errors.BAD_REQUEST,\n        message: Server.errorMessages[Server.errors.BAD_REQUEST],\n        context: {\n          name: \"ID_GENERATION_ERROR\",\n          error: e\n        }\n      });\n      closeConnection(Server.errors.BAD_REQUEST);\n      return;\n    }\n    debug('handshaking client \"%s\"', id);\n    try {\n      var transport = this.createTransport(transportName, req);\n      if (\"polling\" === transportName) {\n        transport.maxHttpBufferSize = this.opts.maxHttpBufferSize;\n        transport.httpCompression = this.opts.httpCompression;\n      } else if (\"websocket\" === transportName) {\n        transport.perMessageDeflate = this.opts.perMessageDeflate;\n      }\n      if (req._query && req._query.b64) {\n        transport.supportsBinary = false;\n      } else {\n        transport.supportsBinary = true;\n      }\n    } catch (e) {\n      debug('error handshaking to transport \"%s\"', transportName);\n      this.emit(\"connection_error\", {\n        req,\n        code: Server.errors.BAD_REQUEST,\n        message: Server.errorMessages[Server.errors.BAD_REQUEST],\n        context: {\n          name: \"TRANSPORT_HANDSHAKE_ERROR\",\n          error: e\n        }\n      });\n      closeConnection(Server.errors.BAD_REQUEST);\n      return;\n    }\n    const socket = new socket_1.Socket(id, this, transport, req, protocol);\n    transport.on(\"headers\", (headers, req) => {\n      const isInitialRequest = !req._query.sid;\n      if (isInitialRequest) {\n        if (this.opts.cookie) {\n          headers[\"Set-Cookie\"] = [\n          // @ts-ignore\n          (0, cookie_1.serialize)(this.opts.cookie.name, id, this.opts.cookie)];\n        }\n        this.emit(\"initial_headers\", headers, req);\n      }\n      this.emit(\"headers\", headers, req);\n    });\n    transport.onRequest(req);\n    this.clients[id] = socket;\n    this.clientsCount++;\n    socket.once(\"close\", () => {\n      delete this.clients[id];\n      this.clientsCount--;\n    });\n    this.emit(\"connection\", socket);\n    return transport;\n  }\n}\nexports.BaseServer = BaseServer;\n/**\n * Protocol errors mappings.\n */\nBaseServer.errors = {\n  UNKNOWN_TRANSPORT: 0,\n  UNKNOWN_SID: 1,\n  BAD_HANDSHAKE_METHOD: 2,\n  BAD_REQUEST: 3,\n  FORBIDDEN: 4,\n  UNSUPPORTED_PROTOCOL_VERSION: 5\n};\nBaseServer.errorMessages = {\n  0: \"Transport unknown\",\n  1: \"Session ID unknown\",\n  2: \"Bad handshake method\",\n  3: \"Bad request\",\n  4: \"Forbidden\",\n  5: \"Unsupported protocol version\"\n};\n/**\n * Exposes a subset of the http.ServerResponse interface, in order to be able to apply the middlewares to an upgrade\n * request.\n *\n * @see https://nodejs.org/api/http.html#class-httpserverresponse\n */\nclass WebSocketResponse {\n  constructor(req, socket) {\n    this.req = req;\n    this.socket = socket;\n    // temporarily store the response headers on the req object (see the \"headers\" event)\n    req[kResponseHeaders] = {};\n  }\n  setHeader(name, value) {\n    this.req[kResponseHeaders][name] = value;\n  }\n  getHeader(name) {\n    return this.req[kResponseHeaders][name];\n  }\n  removeHeader(name) {\n    delete this.req[kResponseHeaders][name];\n  }\n  write() {}\n  writeHead() {}\n  end() {\n    // we could return a proper error code, but the WebSocket client will emit an \"error\" event anyway.\n    this.socket.destroy();\n  }\n}\nclass Server extends BaseServer {\n  /**\n   * Initialize websocket server\n   *\n   * @api protected\n   */\n  init() {\n    if (!~this.opts.transports.indexOf(\"websocket\")) return;\n    if (this.ws) this.ws.close();\n    this.ws = new this.opts.wsEngine({\n      noServer: true,\n      clientTracking: false,\n      perMessageDeflate: this.opts.perMessageDeflate,\n      maxPayload: this.opts.maxHttpBufferSize\n    });\n    if (typeof this.ws.on === \"function\") {\n      this.ws.on(\"headers\", (headersArray, req) => {\n        // note: 'ws' uses an array of headers, while Engine.IO uses an object (response.writeHead() accepts both formats)\n        // we could also try to parse the array and then sync the values, but that will be error-prone\n        const additionalHeaders = req[kResponseHeaders] || {};\n        delete req[kResponseHeaders];\n        const isInitialRequest = !req._query.sid;\n        if (isInitialRequest) {\n          this.emit(\"initial_headers\", additionalHeaders, req);\n        }\n        this.emit(\"headers\", additionalHeaders, req);\n        debug(\"writing headers: %j\", additionalHeaders);\n        Object.keys(additionalHeaders).forEach(key => {\n          headersArray.push(`${key}: ${additionalHeaders[key]}`);\n        });\n      });\n    }\n  }\n  cleanup() {\n    if (this.ws) {\n      debug(\"closing webSocketServer\");\n      this.ws.close();\n      // don't delete this.ws because it can be used again if the http server starts listening again\n    }\n  }\n  /**\n   * Prepares a request by processing the query string.\n   *\n   * @api private\n   */\n  prepare(req) {\n    // try to leverage pre-existing `req._query` (e.g: from connect)\n    if (!req._query) {\n      req._query = ~req.url.indexOf(\"?\") ? qs.parse((0, url_1.parse)(req.url).query) : {};\n    }\n  }\n  createTransport(transportName, req) {\n    return new transports_1.default[transportName](req);\n  }\n  /**\n   * Handles an Engine.IO HTTP request.\n   *\n   * @param {IncomingMessage} req\n   * @param {ServerResponse} res\n   * @api public\n   */\n  handleRequest(req, res) {\n    debug('handling \"%s\" http request \"%s\"', req.method, req.url);\n    this.prepare(req);\n    // @ts-ignore\n    req.res = res;\n    const callback = (errorCode, errorContext) => {\n      if (errorCode !== undefined) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        abortRequest(res, errorCode, errorContext);\n        return;\n      }\n      // @ts-ignore\n      if (req._query.sid) {\n        debug(\"setting new request for existing client\");\n        // @ts-ignore\n        this.clients[req._query.sid].transport.onRequest(req);\n      } else {\n        const closeConnection = (errorCode, errorContext) => abortRequest(res, errorCode, errorContext);\n        // @ts-ignore\n        this.handshake(req._query.transport, req, closeConnection);\n      }\n    };\n    this._applyMiddlewares(req, res, err => {\n      if (err) {\n        callback(Server.errors.BAD_REQUEST, {\n          name: \"MIDDLEWARE_FAILURE\"\n        });\n      } else {\n        this.verify(req, false, callback);\n      }\n    });\n  }\n  /**\n   * Handles an Engine.IO HTTP Upgrade.\n   *\n   * @api public\n   */\n  handleUpgrade(req, socket, upgradeHead) {\n    this.prepare(req);\n    const res = new WebSocketResponse(req, socket);\n    const callback = (errorCode, errorContext) => {\n      if (errorCode !== undefined) {\n        this.emit(\"connection_error\", {\n          req,\n          code: errorCode,\n          message: Server.errorMessages[errorCode],\n          context: errorContext\n        });\n        abortUpgrade(socket, errorCode, errorContext);\n        return;\n      }\n      const head = Buffer.from(upgradeHead);\n      upgradeHead = null;\n      // some middlewares (like express-session) wait for the writeHead() call to flush their headers\n      // see https://github.com/expressjs/session/blob/1010fadc2f071ddf2add94235d72224cf65159c6/index.js#L220-L244\n      res.writeHead();\n      // delegate to ws\n      this.ws.handleUpgrade(req, socket, head, websocket => {\n        this.onWebSocket(req, socket, websocket);\n      });\n    };\n    this._applyMiddlewares(req, res, err => {\n      if (err) {\n        callback(Server.errors.BAD_REQUEST, {\n          name: \"MIDDLEWARE_FAILURE\"\n        });\n      } else {\n        this.verify(req, true, callback);\n      }\n    });\n  }\n  /**\n   * Called upon a ws.io connection.\n   *\n   * @param {ws.Socket} websocket\n   * @api private\n   */\n  onWebSocket(req, socket, websocket) {\n    websocket.on(\"error\", onUpgradeError);\n    if (transports_1.default[req._query.transport] !== undefined && !transports_1.default[req._query.transport].prototype.handlesUpgrades) {\n      debug(\"transport doesnt handle upgraded requests\");\n      websocket.close();\n      return;\n    }\n    // get client id\n    const id = req._query.sid;\n    // keep a reference to the ws.Socket\n    req.websocket = websocket;\n    if (id) {\n      const client = this.clients[id];\n      if (!client) {\n        debug(\"upgrade attempt for closed client\");\n        websocket.close();\n      } else if (client.upgrading) {\n        debug(\"transport has already been trying to upgrade\");\n        websocket.close();\n      } else if (client.upgraded) {\n        debug(\"transport had already been upgraded\");\n        websocket.close();\n      } else {\n        debug(\"upgrading existing transport\");\n        // transport error handling takes over\n        websocket.removeListener(\"error\", onUpgradeError);\n        const transport = this.createTransport(req._query.transport, req);\n        if (req._query && req._query.b64) {\n          transport.supportsBinary = false;\n        } else {\n          transport.supportsBinary = true;\n        }\n        transport.perMessageDeflate = this.opts.perMessageDeflate;\n        client.maybeUpgrade(transport);\n      }\n    } else {\n      const closeConnection = (errorCode, errorContext) => abortUpgrade(socket, errorCode, errorContext);\n      this.handshake(req._query.transport, req, closeConnection);\n    }\n    function onUpgradeError() {\n      debug(\"websocket error before upgrade\");\n      // websocket.close() not needed\n    }\n  }\n  /**\n   * Captures upgrade requests for a http.Server.\n   *\n   * @param {http.Server} server\n   * @param {Object} options\n   * @api public\n   */\n  attach(server) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const path = this._computePath(options);\n    const destroyUpgradeTimeout = options.destroyUpgradeTimeout || 1000;\n    function check(req) {\n      // TODO use `path === new URL(...).pathname` in the next major release (ref: https://nodejs.org/api/url.html)\n      return path === req.url.slice(0, path.length);\n    }\n    // cache and clean up listeners\n    const listeners = server.listeners(\"request\").slice(0);\n    server.removeAllListeners(\"request\");\n    server.on(\"close\", this.close.bind(this));\n    server.on(\"listening\", this.init.bind(this));\n    // add request handler\n    server.on(\"request\", (req, res) => {\n      if (check(req)) {\n        debug('intercepting request for path \"%s\"', path);\n        this.handleRequest(req, res);\n      } else {\n        let i = 0;\n        const l = listeners.length;\n        for (; i < l; i++) {\n          listeners[i].call(server, req, res);\n        }\n      }\n    });\n    if (~this.opts.transports.indexOf(\"websocket\")) {\n      server.on(\"upgrade\", (req, socket, head) => {\n        if (check(req)) {\n          this.handleUpgrade(req, socket, head);\n        } else if (false !== options.destroyUpgrade) {\n          // default node behavior is to disconnect when no handlers\n          // but by adding a handler, we prevent that\n          // and if no eio thing handles the upgrade\n          // then the socket needs to die!\n          setTimeout(function () {\n            // @ts-ignore\n            if (socket.writable && socket.bytesWritten <= 0) {\n              socket.on(\"error\", e => {\n                debug(\"error while destroying upgrade: %s\", e.message);\n              });\n              return socket.end();\n            }\n          }, destroyUpgradeTimeout);\n        }\n      });\n    }\n  }\n}\nexports.Server = Server;\n/**\n * Close the HTTP long-polling request\n *\n * @param res - the response object\n * @param errorCode - the error code\n * @param errorContext - additional error context\n *\n * @api private\n */\nfunction abortRequest(res, errorCode, errorContext) {\n  const statusCode = errorCode === Server.errors.FORBIDDEN ? 403 : 400;\n  const message = errorContext && errorContext.message ? errorContext.message : Server.errorMessages[errorCode];\n  res.writeHead(statusCode, {\n    \"Content-Type\": \"application/json\"\n  });\n  res.end(JSON.stringify({\n    code: errorCode,\n    message\n  }));\n}\n/**\n * Close the WebSocket connection\n *\n * @param {net.Socket} socket\n * @param {string} errorCode - the error code\n * @param {object} errorContext - additional error context\n *\n * @api private\n */\nfunction abortUpgrade(socket, errorCode) {\n  let errorContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  socket.on(\"error\", () => {\n    debug(\"ignoring error from closed connection\");\n  });\n  if (socket.writable) {\n    const message = errorContext.message || Server.errorMessages[errorCode];\n    const length = Buffer.byteLength(message);\n    socket.write(\"HTTP/1.1 400 Bad Request\\r\\n\" + \"Connection: close\\r\\n\" + \"Content-type: text/html\\r\\n\" + \"Content-Length: \" + length + \"\\r\\n\" + \"\\r\\n\" + message);\n  }\n  socket.destroy();\n}\n/* eslint-disable */\n/**\n * From https://github.com/nodejs/node/blob/v8.4.0/lib/_http_common.js#L303-L354\n *\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n *\n * checkInvalidHeaderChar() is currently designed to be inlinable by v8,\n * so take care when making changes to the implementation so that the source\n * code size does not exceed v8's default max_inlined_source_size setting.\n **/\n// prettier-ignore\nconst validHdrChars = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 // ... 255\n];\n\nfunction checkInvalidHeaderChar(val) {\n  val += \"\";\n  if (val.length < 1) return false;\n  if (!validHdrChars[val.charCodeAt(0)]) {\n    debug('invalid header, index 0, char \"%s\"', val.charCodeAt(0));\n    return true;\n  }\n  if (val.length < 2) return false;\n  if (!validHdrChars[val.charCodeAt(1)]) {\n    debug('invalid header, index 1, char \"%s\"', val.charCodeAt(1));\n    return true;\n  }\n  if (val.length < 3) return false;\n  if (!validHdrChars[val.charCodeAt(2)]) {\n    debug('invalid header, index 2, char \"%s\"', val.charCodeAt(2));\n    return true;\n  }\n  if (val.length < 4) return false;\n  if (!validHdrChars[val.charCodeAt(3)]) {\n    debug('invalid header, index 3, char \"%s\"', val.charCodeAt(3));\n    return true;\n  }\n  for (let i = 4; i < val.length; ++i) {\n    if (!validHdrChars[val.charCodeAt(i)]) {\n      debug('invalid header, index \"%i\", char \"%s\"', i, val.charCodeAt(i));\n      return true;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Server","BaseServer","qs","require","url_1","base64id","transports_1","events_1","socket_1","debug_1","cookie_1","ws_1","debug","default","kResponseHeaders","Symbol","EventEmitter","constructor","opts","arguments","length","undefined","middlewares","clients","clientsCount","assign","wsEngine","pingTimeout","pingInterval","upgradeTimeout","maxHttpBufferSize","transports","keys","allowUpgrades","httpCompression","threshold","cors","allowEIO3","cookie","name","path","httpOnly","sameSite","use","perMessageDeflate","init","_computePath","options","replace","addTrailingSlash","upgrades","transport","upgradesTo","verify","req","upgrade","fn","_query","indexOf","errors","UNKNOWN_TRANSPORT","isOriginInvalid","checkInvalidHeaderChar","headers","origin","BAD_REQUEST","sid","hasOwnProperty","UNKNOWN_SID","previousTransport","method","BAD_HANDSHAKE_METHOD","allowRequest","message","success","FORBIDDEN","push","_applyMiddlewares","res","callback","apply","i","err","close","cleanup","generateId","handshake","transportName","closeConnection","protocol","EIO","emit","code","UNSUPPORTED_PROTOCOL_VERSION","errorMessages","context","id","e","error","createTransport","b64","supportsBinary","socket","Socket","on","isInitialRequest","serialize","onRequest","once","WebSocketResponse","setHeader","getHeader","removeHeader","write","writeHead","end","destroy","ws","noServer","clientTracking","maxPayload","headersArray","additionalHeaders","forEach","key","prepare","url","parse","query","handleRequest","errorCode","errorContext","abortRequest","handleUpgrade","upgradeHead","abortUpgrade","head","Buffer","from","websocket","onWebSocket","onUpgradeError","prototype","handlesUpgrades","client","upgrading","upgraded","removeListener","maybeUpgrade","attach","server","destroyUpgradeTimeout","check","slice","listeners","removeAllListeners","bind","l","call","destroyUpgrade","setTimeout","writable","bytesWritten","statusCode","JSON","stringify","byteLength","validHdrChars","val","charCodeAt"],"sources":["C:/Users/MrRya/OneDrive/Desktop/main/js/react/noor-chess/node_modules/engine.io/build/server.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports.BaseServer = void 0;\nconst qs = require(\"querystring\");\nconst url_1 = require(\"url\");\nconst base64id = require(\"base64id\");\nconst transports_1 = require(\"./transports\");\nconst events_1 = require(\"events\");\nconst socket_1 = require(\"./socket\");\nconst debug_1 = require(\"debug\");\nconst cookie_1 = require(\"cookie\");\nconst ws_1 = require(\"ws\");\nconst debug = (0, debug_1.default)(\"engine\");\nconst kResponseHeaders = Symbol(\"responseHeaders\");\nclass BaseServer extends events_1.EventEmitter {\n    /**\n     * Server constructor.\n     *\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(opts = {}) {\n        super();\n        this.middlewares = [];\n        this.clients = {};\n        this.clientsCount = 0;\n        this.opts = Object.assign({\n            wsEngine: ws_1.Server,\n            pingTimeout: 20000,\n            pingInterval: 25000,\n            upgradeTimeout: 10000,\n            maxHttpBufferSize: 1e6,\n            transports: Object.keys(transports_1.default),\n            allowUpgrades: true,\n            httpCompression: {\n                threshold: 1024,\n            },\n            cors: false,\n            allowEIO3: false,\n        }, opts);\n        if (opts.cookie) {\n            this.opts.cookie = Object.assign({\n                name: \"io\",\n                path: \"/\",\n                // @ts-ignore\n                httpOnly: opts.cookie.path !== false,\n                sameSite: \"lax\",\n            }, opts.cookie);\n        }\n        if (this.opts.cors) {\n            this.use(require(\"cors\")(this.opts.cors));\n        }\n        if (opts.perMessageDeflate) {\n            this.opts.perMessageDeflate = Object.assign({\n                threshold: 1024,\n            }, opts.perMessageDeflate);\n        }\n        this.init();\n    }\n    /**\n     * Compute the pathname of the requests that are handled by the server\n     * @param options\n     * @protected\n     */\n    _computePath(options) {\n        let path = (options.path || \"/engine.io\").replace(/\\/$/, \"\");\n        if (options.addTrailingSlash !== false) {\n            // normalize path\n            path += \"/\";\n        }\n        return path;\n    }\n    /**\n     * Returns a list of available transports for upgrade given a certain transport.\n     *\n     * @return {Array}\n     * @api public\n     */\n    upgrades(transport) {\n        if (!this.opts.allowUpgrades)\n            return [];\n        return transports_1.default[transport].upgradesTo || [];\n    }\n    /**\n     * Verifies a request.\n     *\n     * @param {http.IncomingMessage}\n     * @return {Boolean} whether the request is valid\n     * @api private\n     */\n    verify(req, upgrade, fn) {\n        // transport check\n        const transport = req._query.transport;\n        if (!~this.opts.transports.indexOf(transport)) {\n            debug('unknown transport \"%s\"', transport);\n            return fn(Server.errors.UNKNOWN_TRANSPORT, { transport });\n        }\n        // 'Origin' header check\n        const isOriginInvalid = checkInvalidHeaderChar(req.headers.origin);\n        if (isOriginInvalid) {\n            const origin = req.headers.origin;\n            req.headers.origin = null;\n            debug(\"origin header invalid\");\n            return fn(Server.errors.BAD_REQUEST, {\n                name: \"INVALID_ORIGIN\",\n                origin,\n            });\n        }\n        // sid check\n        const sid = req._query.sid;\n        if (sid) {\n            if (!this.clients.hasOwnProperty(sid)) {\n                debug('unknown sid \"%s\"', sid);\n                return fn(Server.errors.UNKNOWN_SID, {\n                    sid,\n                });\n            }\n            const previousTransport = this.clients[sid].transport.name;\n            if (!upgrade && previousTransport !== transport) {\n                debug(\"bad request: unexpected transport without upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_MISMATCH\",\n                    transport,\n                    previousTransport,\n                });\n            }\n        }\n        else {\n            // handshake is GET only\n            if (\"GET\" !== req.method) {\n                return fn(Server.errors.BAD_HANDSHAKE_METHOD, {\n                    method: req.method,\n                });\n            }\n            if (transport === \"websocket\" && !upgrade) {\n                debug(\"invalid transport upgrade\");\n                return fn(Server.errors.BAD_REQUEST, {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\",\n                });\n            }\n            if (!this.opts.allowRequest)\n                return fn();\n            return this.opts.allowRequest(req, (message, success) => {\n                if (!success) {\n                    return fn(Server.errors.FORBIDDEN, {\n                        message,\n                    });\n                }\n                fn();\n            });\n        }\n        fn();\n    }\n    /**\n     * Adds a new middleware.\n     *\n     * @example\n     * import helmet from \"helmet\";\n     *\n     * engine.use(helmet());\n     *\n     * @param fn\n     */\n    use(fn) {\n        this.middlewares.push(fn);\n    }\n    /**\n     * Apply the middlewares to the request.\n     *\n     * @param req\n     * @param res\n     * @param callback\n     * @protected\n     */\n    _applyMiddlewares(req, res, callback) {\n        if (this.middlewares.length === 0) {\n            debug(\"no middleware to apply, skipping\");\n            return callback();\n        }\n        const apply = (i) => {\n            debug(\"applying middleware nÂ°%d\", i + 1);\n            this.middlewares[i](req, res, (err) => {\n                if (err) {\n                    return callback(err);\n                }\n                if (i + 1 < this.middlewares.length) {\n                    apply(i + 1);\n                }\n                else {\n                    callback();\n                }\n            });\n        };\n        apply(0);\n    }\n    /**\n     * Closes all clients.\n     *\n     * @api public\n     */\n    close() {\n        debug(\"closing all open clients\");\n        for (let i in this.clients) {\n            if (this.clients.hasOwnProperty(i)) {\n                this.clients[i].close(true);\n            }\n        }\n        this.cleanup();\n        return this;\n    }\n    /**\n     * generate a socket id.\n     * Overwrite this method to generate your custom socket id\n     *\n     * @param {Object} request object\n     * @api public\n     */\n    generateId(req) {\n        return base64id.generateId();\n    }\n    /**\n     * Handshakes a new client.\n     *\n     * @param {String} transport name\n     * @param {Object} request object\n     * @param {Function} closeConnection\n     *\n     * @api protected\n     */\n    async handshake(transportName, req, closeConnection) {\n        const protocol = req._query.EIO === \"4\" ? 4 : 3; // 3rd revision by default\n        if (protocol === 3 && !this.opts.allowEIO3) {\n            debug(\"unsupported protocol version\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.UNSUPPORTED_PROTOCOL_VERSION,\n                message: Server.errorMessages[Server.errors.UNSUPPORTED_PROTOCOL_VERSION],\n                context: {\n                    protocol,\n                },\n            });\n            closeConnection(Server.errors.UNSUPPORTED_PROTOCOL_VERSION);\n            return;\n        }\n        let id;\n        try {\n            id = await this.generateId(req);\n        }\n        catch (e) {\n            debug(\"error while generating an id\");\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"ID_GENERATION_ERROR\",\n                    error: e,\n                },\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        debug('handshaking client \"%s\"', id);\n        try {\n            var transport = this.createTransport(transportName, req);\n            if (\"polling\" === transportName) {\n                transport.maxHttpBufferSize = this.opts.maxHttpBufferSize;\n                transport.httpCompression = this.opts.httpCompression;\n            }\n            else if (\"websocket\" === transportName) {\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n            }\n            if (req._query && req._query.b64) {\n                transport.supportsBinary = false;\n            }\n            else {\n                transport.supportsBinary = true;\n            }\n        }\n        catch (e) {\n            debug('error handshaking to transport \"%s\"', transportName);\n            this.emit(\"connection_error\", {\n                req,\n                code: Server.errors.BAD_REQUEST,\n                message: Server.errorMessages[Server.errors.BAD_REQUEST],\n                context: {\n                    name: \"TRANSPORT_HANDSHAKE_ERROR\",\n                    error: e,\n                },\n            });\n            closeConnection(Server.errors.BAD_REQUEST);\n            return;\n        }\n        const socket = new socket_1.Socket(id, this, transport, req, protocol);\n        transport.on(\"headers\", (headers, req) => {\n            const isInitialRequest = !req._query.sid;\n            if (isInitialRequest) {\n                if (this.opts.cookie) {\n                    headers[\"Set-Cookie\"] = [\n                        // @ts-ignore\n                        (0, cookie_1.serialize)(this.opts.cookie.name, id, this.opts.cookie),\n                    ];\n                }\n                this.emit(\"initial_headers\", headers, req);\n            }\n            this.emit(\"headers\", headers, req);\n        });\n        transport.onRequest(req);\n        this.clients[id] = socket;\n        this.clientsCount++;\n        socket.once(\"close\", () => {\n            delete this.clients[id];\n            this.clientsCount--;\n        });\n        this.emit(\"connection\", socket);\n        return transport;\n    }\n}\nexports.BaseServer = BaseServer;\n/**\n * Protocol errors mappings.\n */\nBaseServer.errors = {\n    UNKNOWN_TRANSPORT: 0,\n    UNKNOWN_SID: 1,\n    BAD_HANDSHAKE_METHOD: 2,\n    BAD_REQUEST: 3,\n    FORBIDDEN: 4,\n    UNSUPPORTED_PROTOCOL_VERSION: 5,\n};\nBaseServer.errorMessages = {\n    0: \"Transport unknown\",\n    1: \"Session ID unknown\",\n    2: \"Bad handshake method\",\n    3: \"Bad request\",\n    4: \"Forbidden\",\n    5: \"Unsupported protocol version\",\n};\n/**\n * Exposes a subset of the http.ServerResponse interface, in order to be able to apply the middlewares to an upgrade\n * request.\n *\n * @see https://nodejs.org/api/http.html#class-httpserverresponse\n */\nclass WebSocketResponse {\n    constructor(req, socket) {\n        this.req = req;\n        this.socket = socket;\n        // temporarily store the response headers on the req object (see the \"headers\" event)\n        req[kResponseHeaders] = {};\n    }\n    setHeader(name, value) {\n        this.req[kResponseHeaders][name] = value;\n    }\n    getHeader(name) {\n        return this.req[kResponseHeaders][name];\n    }\n    removeHeader(name) {\n        delete this.req[kResponseHeaders][name];\n    }\n    write() { }\n    writeHead() { }\n    end() {\n        // we could return a proper error code, but the WebSocket client will emit an \"error\" event anyway.\n        this.socket.destroy();\n    }\n}\nclass Server extends BaseServer {\n    /**\n     * Initialize websocket server\n     *\n     * @api protected\n     */\n    init() {\n        if (!~this.opts.transports.indexOf(\"websocket\"))\n            return;\n        if (this.ws)\n            this.ws.close();\n        this.ws = new this.opts.wsEngine({\n            noServer: true,\n            clientTracking: false,\n            perMessageDeflate: this.opts.perMessageDeflate,\n            maxPayload: this.opts.maxHttpBufferSize,\n        });\n        if (typeof this.ws.on === \"function\") {\n            this.ws.on(\"headers\", (headersArray, req) => {\n                // note: 'ws' uses an array of headers, while Engine.IO uses an object (response.writeHead() accepts both formats)\n                // we could also try to parse the array and then sync the values, but that will be error-prone\n                const additionalHeaders = req[kResponseHeaders] || {};\n                delete req[kResponseHeaders];\n                const isInitialRequest = !req._query.sid;\n                if (isInitialRequest) {\n                    this.emit(\"initial_headers\", additionalHeaders, req);\n                }\n                this.emit(\"headers\", additionalHeaders, req);\n                debug(\"writing headers: %j\", additionalHeaders);\n                Object.keys(additionalHeaders).forEach((key) => {\n                    headersArray.push(`${key}: ${additionalHeaders[key]}`);\n                });\n            });\n        }\n    }\n    cleanup() {\n        if (this.ws) {\n            debug(\"closing webSocketServer\");\n            this.ws.close();\n            // don't delete this.ws because it can be used again if the http server starts listening again\n        }\n    }\n    /**\n     * Prepares a request by processing the query string.\n     *\n     * @api private\n     */\n    prepare(req) {\n        // try to leverage pre-existing `req._query` (e.g: from connect)\n        if (!req._query) {\n            req._query = ~req.url.indexOf(\"?\") ? qs.parse((0, url_1.parse)(req.url).query) : {};\n        }\n    }\n    createTransport(transportName, req) {\n        return new transports_1.default[transportName](req);\n    }\n    /**\n     * Handles an Engine.IO HTTP request.\n     *\n     * @param {IncomingMessage} req\n     * @param {ServerResponse} res\n     * @api public\n     */\n    handleRequest(req, res) {\n        debug('handling \"%s\" http request \"%s\"', req.method, req.url);\n        this.prepare(req);\n        // @ts-ignore\n        req.res = res;\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                abortRequest(res, errorCode, errorContext);\n                return;\n            }\n            // @ts-ignore\n            if (req._query.sid) {\n                debug(\"setting new request for existing client\");\n                // @ts-ignore\n                this.clients[req._query.sid].transport.onRequest(req);\n            }\n            else {\n                const closeConnection = (errorCode, errorContext) => abortRequest(res, errorCode, errorContext);\n                // @ts-ignore\n                this.handshake(req._query.transport, req, closeConnection);\n            }\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, false, callback);\n            }\n        });\n    }\n    /**\n     * Handles an Engine.IO HTTP Upgrade.\n     *\n     * @api public\n     */\n    handleUpgrade(req, socket, upgradeHead) {\n        this.prepare(req);\n        const res = new WebSocketResponse(req, socket);\n        const callback = (errorCode, errorContext) => {\n            if (errorCode !== undefined) {\n                this.emit(\"connection_error\", {\n                    req,\n                    code: errorCode,\n                    message: Server.errorMessages[errorCode],\n                    context: errorContext,\n                });\n                abortUpgrade(socket, errorCode, errorContext);\n                return;\n            }\n            const head = Buffer.from(upgradeHead);\n            upgradeHead = null;\n            // some middlewares (like express-session) wait for the writeHead() call to flush their headers\n            // see https://github.com/expressjs/session/blob/1010fadc2f071ddf2add94235d72224cf65159c6/index.js#L220-L244\n            res.writeHead();\n            // delegate to ws\n            this.ws.handleUpgrade(req, socket, head, (websocket) => {\n                this.onWebSocket(req, socket, websocket);\n            });\n        };\n        this._applyMiddlewares(req, res, (err) => {\n            if (err) {\n                callback(Server.errors.BAD_REQUEST, { name: \"MIDDLEWARE_FAILURE\" });\n            }\n            else {\n                this.verify(req, true, callback);\n            }\n        });\n    }\n    /**\n     * Called upon a ws.io connection.\n     *\n     * @param {ws.Socket} websocket\n     * @api private\n     */\n    onWebSocket(req, socket, websocket) {\n        websocket.on(\"error\", onUpgradeError);\n        if (transports_1.default[req._query.transport] !== undefined &&\n            !transports_1.default[req._query.transport].prototype.handlesUpgrades) {\n            debug(\"transport doesnt handle upgraded requests\");\n            websocket.close();\n            return;\n        }\n        // get client id\n        const id = req._query.sid;\n        // keep a reference to the ws.Socket\n        req.websocket = websocket;\n        if (id) {\n            const client = this.clients[id];\n            if (!client) {\n                debug(\"upgrade attempt for closed client\");\n                websocket.close();\n            }\n            else if (client.upgrading) {\n                debug(\"transport has already been trying to upgrade\");\n                websocket.close();\n            }\n            else if (client.upgraded) {\n                debug(\"transport had already been upgraded\");\n                websocket.close();\n            }\n            else {\n                debug(\"upgrading existing transport\");\n                // transport error handling takes over\n                websocket.removeListener(\"error\", onUpgradeError);\n                const transport = this.createTransport(req._query.transport, req);\n                if (req._query && req._query.b64) {\n                    transport.supportsBinary = false;\n                }\n                else {\n                    transport.supportsBinary = true;\n                }\n                transport.perMessageDeflate = this.opts.perMessageDeflate;\n                client.maybeUpgrade(transport);\n            }\n        }\n        else {\n            const closeConnection = (errorCode, errorContext) => abortUpgrade(socket, errorCode, errorContext);\n            this.handshake(req._query.transport, req, closeConnection);\n        }\n        function onUpgradeError() {\n            debug(\"websocket error before upgrade\");\n            // websocket.close() not needed\n        }\n    }\n    /**\n     * Captures upgrade requests for a http.Server.\n     *\n     * @param {http.Server} server\n     * @param {Object} options\n     * @api public\n     */\n    attach(server, options = {}) {\n        const path = this._computePath(options);\n        const destroyUpgradeTimeout = options.destroyUpgradeTimeout || 1000;\n        function check(req) {\n            // TODO use `path === new URL(...).pathname` in the next major release (ref: https://nodejs.org/api/url.html)\n            return path === req.url.slice(0, path.length);\n        }\n        // cache and clean up listeners\n        const listeners = server.listeners(\"request\").slice(0);\n        server.removeAllListeners(\"request\");\n        server.on(\"close\", this.close.bind(this));\n        server.on(\"listening\", this.init.bind(this));\n        // add request handler\n        server.on(\"request\", (req, res) => {\n            if (check(req)) {\n                debug('intercepting request for path \"%s\"', path);\n                this.handleRequest(req, res);\n            }\n            else {\n                let i = 0;\n                const l = listeners.length;\n                for (; i < l; i++) {\n                    listeners[i].call(server, req, res);\n                }\n            }\n        });\n        if (~this.opts.transports.indexOf(\"websocket\")) {\n            server.on(\"upgrade\", (req, socket, head) => {\n                if (check(req)) {\n                    this.handleUpgrade(req, socket, head);\n                }\n                else if (false !== options.destroyUpgrade) {\n                    // default node behavior is to disconnect when no handlers\n                    // but by adding a handler, we prevent that\n                    // and if no eio thing handles the upgrade\n                    // then the socket needs to die!\n                    setTimeout(function () {\n                        // @ts-ignore\n                        if (socket.writable && socket.bytesWritten <= 0) {\n                            socket.on(\"error\", (e) => {\n                                debug(\"error while destroying upgrade: %s\", e.message);\n                            });\n                            return socket.end();\n                        }\n                    }, destroyUpgradeTimeout);\n                }\n            });\n        }\n    }\n}\nexports.Server = Server;\n/**\n * Close the HTTP long-polling request\n *\n * @param res - the response object\n * @param errorCode - the error code\n * @param errorContext - additional error context\n *\n * @api private\n */\nfunction abortRequest(res, errorCode, errorContext) {\n    const statusCode = errorCode === Server.errors.FORBIDDEN ? 403 : 400;\n    const message = errorContext && errorContext.message\n        ? errorContext.message\n        : Server.errorMessages[errorCode];\n    res.writeHead(statusCode, { \"Content-Type\": \"application/json\" });\n    res.end(JSON.stringify({\n        code: errorCode,\n        message,\n    }));\n}\n/**\n * Close the WebSocket connection\n *\n * @param {net.Socket} socket\n * @param {string} errorCode - the error code\n * @param {object} errorContext - additional error context\n *\n * @api private\n */\nfunction abortUpgrade(socket, errorCode, errorContext = {}) {\n    socket.on(\"error\", () => {\n        debug(\"ignoring error from closed connection\");\n    });\n    if (socket.writable) {\n        const message = errorContext.message || Server.errorMessages[errorCode];\n        const length = Buffer.byteLength(message);\n        socket.write(\"HTTP/1.1 400 Bad Request\\r\\n\" +\n            \"Connection: close\\r\\n\" +\n            \"Content-type: text/html\\r\\n\" +\n            \"Content-Length: \" +\n            length +\n            \"\\r\\n\" +\n            \"\\r\\n\" +\n            message);\n    }\n    socket.destroy();\n}\n/* eslint-disable */\n/**\n * From https://github.com/nodejs/node/blob/v8.4.0/lib/_http_common.js#L303-L354\n *\n * True if val contains an invalid field-vchar\n *  field-value    = *( field-content / obs-fold )\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n *  field-vchar    = VCHAR / obs-text\n *\n * checkInvalidHeaderChar() is currently designed to be inlinable by v8,\n * so take care when making changes to the implementation so that the source\n * code size does not exceed v8's default max_inlined_source_size setting.\n **/\n// prettier-ignore\nconst validHdrChars = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 // ... 255\n];\nfunction checkInvalidHeaderChar(val) {\n    val += \"\";\n    if (val.length < 1)\n        return false;\n    if (!validHdrChars[val.charCodeAt(0)]) {\n        debug('invalid header, index 0, char \"%s\"', val.charCodeAt(0));\n        return true;\n    }\n    if (val.length < 2)\n        return false;\n    if (!validHdrChars[val.charCodeAt(1)]) {\n        debug('invalid header, index 1, char \"%s\"', val.charCodeAt(1));\n        return true;\n    }\n    if (val.length < 3)\n        return false;\n    if (!validHdrChars[val.charCodeAt(2)]) {\n        debug('invalid header, index 2, char \"%s\"', val.charCodeAt(2));\n        return true;\n    }\n    if (val.length < 4)\n        return false;\n    if (!validHdrChars[val.charCodeAt(3)]) {\n        debug('invalid header, index 3, char \"%s\"', val.charCodeAt(3));\n        return true;\n    }\n    for (let i = 4; i < val.length; ++i) {\n        if (!validHdrChars[val.charCodeAt(i)]) {\n            debug('invalid header, index \"%i\", char \"%s\"', i, val.charCodeAt(i));\n            return true;\n        }\n    }\n    return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}